// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  CompanyAdmin    CompanyAdmin[]
  Employee        Employee[]
  TransferRequest TransferRequest[]
}

model CompanyAdmin {
  id Int @id @default(autoincrement())

  user       User    @relation(fields: [user_id], references: [id])
  user_id    Int
  company    Company @relation(fields: [company_id], references: [id])
  company_id Int

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Employee {
  id          Int @id @default(autoincrement())
  base_salary Int

  user          User    @relation(name: "EmployeeUser", fields: [user_id], references: [id])
  user_id       Int
  company       Company @relation(fields: [company_id], references: [id])
  company_id    Int
  created_by    User?   @relation(name: "CreatedUser", fields: [created_by_id], references: [id])
  created_by_id Int?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  TransferRequest TransferRequest[]
  User            User?             @relation(fields: [userId], references: [id])
  userId          Int?
}

model TransferRequest {
  id       Int     @id @default(autoincrement())
  amount   Int
  approved Boolean @default(false)

  company     Company  @relation(fields: [company_id], references: [id])
  company_id  Int
  approved_by User     @relation(fields: [user_id], references: [id])
  user_id     Int
  employee    Employee @relation(fields: [employee_id], references: [id])
  employee_id Int

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model User {
  id             Int     @id @default(autoincrement())
  is_super_admin Boolean @default(false)
  username       String  @unique @db.VarChar(255)
  password       String  @unique @db.VarChar(255)
  firstname      String  @db.VarChar(255)
  lastname       String  @db.VarChar(255)

  role    Role @relation(fields: [role_id], references: [id])
  role_id Int

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  CompanyAdmin    CompanyAdmin[]
  TransferRequest TransferRequest[]
  EmployeeUser    Employee[]        @relation("EmployeeUser")
  CreatedUser     Employee[]        @relation("CreatedUser")
  Employee        Employee[]
}

model Role {
  id    Int       @id @default(autoincrement())
  level Int       @unique
  title String    @unique
  role  RoleLevel @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  User User[]
}

enum RoleLevel {
  SUPER_ADMIN
  CLIENT_ADMIN
  EMPLOYEE
}
